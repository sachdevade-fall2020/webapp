name: Pull Request Check Workflow

on:
  pull_request:
    branches: [ master ]

jobs:
  pr-check:
    runs-on: ubuntu-latest

    # docker services required
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
          MYSQL_DATABASE: csye6225_test
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      # checkout code
      - name: Checkout Code
        uses: actions/checkout@v2
      
      # get composer cache dir
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      # cache
      - uses: actions/cache@v2
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      # cache vendor
      - name: Cache PHP Dependencies
        uses: actions/cache@v2
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
      
      # copy .env
      - name: Create .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      # install compser dependencies
      - name: Install Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      # generate application key
      - name: Generate Application Key
        run: php artisan key:generate

      # fix directory permissions
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      #db migration
      - name: Migrate Database
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: csye6225_test
          DB_PORT: 3307
          DB_USER: root
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: php artisan migrate

      # clear cache & config
      - name: Clear Cache & Config
        run: php artisan cache:clear && php artisan config:clear

      # execute unit & feature tests
      - name: Execute Tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: csye6225_test
          DB_PORT: 3307
          DB_USER: root
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: ./vendor/bin/phpunit